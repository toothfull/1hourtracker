name: 1-hour-tracker

on: 
  push:
    paths:
      - 'browser/**'
      - 'server/**'
      - '.github/workflows/build-and-test.yml'
      - 'Dockerfile'
    branches:
      - '**'

env: 
  ARTIFACT_NAME: TypeScript-1-Hour-Tracker

jobs:
  build:
    name: Build Server
    runs-on: ubuntu-22.04
    permissions:
      contents: read
    defaults:
      run:
        working-directory: ./server/
    steps:
      - name: Clone repo
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with: 
          node-version: 18

      - name: Install Dependencies
        run: npm install

      - name: Create credentials file
        run: |
          touch ./typescript/credentials.ts
          echo "export const srv = 'mongodb+srv'" >> ./typescript/credentials.ts
          echo "export const userName = '${{ secrets.MONGO_USERNAME }}'" >> ./typescript/credentials.ts
          echo "export const password = '${{ secrets.MONGO_PASSWORD }}'" >> ./typescript/credentials.ts
          echo "export const url = '${{ secrets.MONGO_URL }}'" >> ./typescript/credentials.ts
          echo "export const atlas = '${{ secrets.MONGO_ATLAS }}'" >> ./typescript/credentials.ts

      - name: Lint with ESlint
        run: npx eslint ./typescript/

      - name: Compile TypesScript
        run: npx tsc

      - name: Run Tests
        run: npm test

      - name: Upload Code
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: |
            ./server/emit/
            ./server/package.json
            ./server/package-lock.json

  test:
    name: Test
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Clone repo
        uses: actions/checkout@v3

      - name: Validate
        uses: Cyb3r-Jak3/html5validator-action@master
        with:
          root: ./browser/
          css: true
      - name: Upload log
        uses: actions/upload-artifact@v3
        with:
          name: log
          path: log.log
        
  docker:
    name: Docker
    runs-on: ubuntu-22.04
    needs: [ build, test ]
    permissions:
      contents: read
      packages: write
    env:
      REGISTRY_NAME: ghcr.io
    steps: 
    - name: Clone repo
      uses: actions/checkout@v3

    - name: Download Code
      uses: actions/download-artifact@v3
      with:
        name: ${{ env.ARTIFACT_NAME }}
        path: ./code/

    - name: Setup Docker
      uses: docker/setup-buildx-action@v2
      with:
        platforms: linux/amd64

    #- name: Setup GCloud
    #  uses: google-github-actions/setup-gcloud@v1

    #- name: Auth via GCloud
    #  id: auth
    #  uses: google-github-actions/auth@v1
    #  with:
    #    credentials_json: '${{ secrets.GCLOUD_CREDENTIALS }}'

    #- name: Setup GCloud with Docker
    #  run: |
    #    gcloud auth configure-docker

    - name: Login to Docker
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY_NAME }}
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build Docker Image
      uses: docker/build-push-action@v3
      with:
        file: ./Dockerfile
        context: ./
        tags: ${{ env.REGISTRY_NAME }}/${{ github.repository_owner }}/1hourtracker:latest
        push: true

    #- name: Build Docker Image
    #  run: docker image build -t ${{ env.REGISTRY_NAME }}/${{ github.repository_owner }}/1hourtracker:latest -f ./Dockerfile ./

    #- name: Push to GCR
    #  run: docker image push ${{ env.REGISTRY_NAME }}/${{ github.repository_owner }}/1hourtracker:latest

    #- name: Deploy to GCloud
    #  uses: google-github-actions/deploy-cloudrun@v1
    #  with:
    #    service: one-hour-tracker
    #    image: ${{ env.REGISTRY_NAME }}/${{ github.repository_owner }}/1hourtracker:latest

    #- name: Cleanup Docker Images
    #  uses: snok/container-retention-policy@v1
    #  with:
    #    image-names: 1hourtracker
    #    cut-off: 0 seconds ago UTC
    #    keep-at-least: 1
    #    untagged-only: true
    #    account-type: personal
    #    token: ${{ secrets.PERSONAL_ACCESS_TOKEN_PACKAGES }}

    - name: Login via Azure CLI
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    #- name: Deploy to Azure Container Instances
    #  uses: azure/aci-deploy@v1
    #  with:
    #    resource-group: one-hour-tracker
    #    dns-name-label: one-hour-tracker
    #    image: ${{ env.REGISTRY_NAME }}/${{ github.repository_owner }}/1hourtracker:latest
    #    name: one-hour-tracker
    #    location: uksouth

    - name: Restart Container
      uses: azure/cli@v1
      with:
        inlineScript: |
          az container restart --name one-hour-tracker --resource-group one-hour-tracker
